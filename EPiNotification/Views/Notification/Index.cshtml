@model NotificationTest.Models.ViewModels.NotificationViewModel

@{
    ViewBag.Title = "Index";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <title>Notifications</title>
    <meta name="generator" content="Bootply" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link href="~/Static/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">

    <!--[if lt IE 9]>
        <script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link href="~/Static/css/styles.css" rel="stylesheet">
    <style>
        td {
            padding: 5px;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-default navbar-fixed-top" role="navigation">
        <div class="collapse navbar-collapse">
            <div>Logged in as : @Model.UserName</div>
            <div>@Html.ActionLink("View assigned tasks", "Index", "Task")</div>
        </div>
        
    </nav>
    <div class="container-fluid">
        <!--left-->
        <div class="col-sm-3">
            <h1>Users</h1>
            <div id="fetch" class="row">Number of Users: <input type="text" id="numberofusers" value="5"> <button id="creatuser" onclick="createusers()">Create</button></div>
            <div>(Users will be created with a name "Userxxxx" where xxxx is a random number. Each user will have password "1234567")</div>
        </div>
        <!--center-->
        <div class="col-sm-6">
            <h1 id="mainHeading">Create a new notification</h1>
            <div id="comment" class="row">


                @using (Html.BeginForm("notify", "api/notificationapi", FormMethod.Post, null))
                {
                    <table>
                        <tr>
                            <td>To</td>
                            <td>
                            @Html.TextBox("Recivier", null, new { id = "to" })
                            </td>
                        </tr>
                        <tr>
                            <td>From</td>
                            <td>
                                @Html.TextBox("Sender", null, new { id = "from" })
                            </td>
                        </tr>
                        <tr>
                            <td>Subject</td>
                            <td>
                                @Html.TextBox("Subject", null, new { id = "subject" })
                            </td>
                        </tr>
                        <tr>
                            <td>Message</td>
                            <td>
                                @Html.TextArea("Content", null, new { id = "content", style = "width: 500px; height:200px;"} )
                            </td>
                        </tr>
                        <tr>
                            <td>Channel</td>
                            <td>
                                @Html.DropDownList("Channel", new SelectListItem[] { })
                            </td>
                        </tr>
                        <tr>
                            <td>SendAt</td>
                            <td>
                                @Html.TextBox("SendAt", DateTime.UtcNow, new { id = "sendAt" })
                            </td>
                        </tr>
                    </table>
                    <button id="messagePost">Post</button>
                }
            </div>
        </div> 

            <!--right-->
            <div class="col-sm-3">
                <h1>Messages</h1>
                You have <strong><span id="currentCount">0</span></strong> new messages
                <div id="fetch" class="row"><button id="fetchNext">Get</button> <input type="text" id="fetchCount" value="5"> next messages</div>
                <div id="messageContainer"></div>
            </div>
            <!--/right-->
            <hr>


        </div><!--/container-fluid-->
    <!-- script references -->
    <input type="hidden" id="user" value="@Model.UserName" />
    <script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"></script>
    <script src="~/Static/js/bootstrap.min.js"></script>
    <script src="http://code.jquery.com/jquery-1.9.1.js"></script>
    <script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            console.log("setting up websocket");
            var socket = new WebSocket("ws://" + window.location.hostname + ':' + window.location.port + "/websockets/notification");
            socket.onmessage = function (event) {
                console.log(event.data);
                var data = JSON.parse(event.data);
                $("#currentCount")[0].innerText = data.Count;
            }

            $.ajax({
                url: '/api/notificationapi/getchannles',
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                success: function (data, status, xhr) {
                   
                    $.each(data, function (val, text) {
                        $("#Channel").append(new Option(text.Text, text.Text))
                    });
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });

        });


        $("#fetchNext")
        .click(function () {
            var number = $("#fetchCount")[0].value;
            var user = $("#user")[0].value;
            $.ajax({
                url: '/api/notificationapi/messages?userName=' + user + '&count=' + number,
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                success: function (data, status, xhr) {
                    UpdateMessages(data);
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        });

        function UpdateMessages(data) {
            var jqueryContainer = $("#messageContainer");
            var container = jqueryContainer[0];

            //Clear old entries
            while (container.hasChildNodes()) {
                container.removeChild(container.lastChild);
            }

            displayMessages(data, jqueryContainer);
        }

        function displayMessages(items, container) {
            var index, commentIndex;
            for (index = 0; index < items.length; ++index) {
                var entry = '<div class="row" id=message_' + items[index].Id + '"><div class="col-xs-8"><h3>' + items[index].Subject + '</h3><p>' +
                    items[index].Content + '</p><p><i>' + items[index].Saved + '</i> (by: ' + items[index].Sender + ')</p></div>' +
                    '<div class="col-xs-4"><div style="padding-top:2em">Mark as read   <input type="checkbox" id="chk_' +
                    items[index].Id + '" /></div></div>';
                    
                container.prepend(entry);
                $('#chk_' + items[index].Id).click(function (e) {
                    var id = e.target.id.substring(4,e.target.id.length);
                    $.ajax({
                        url: '/api/notificationapi/markread?id=' + id,
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        success: function (data, status, xhr) {
                            $('#replyMessage' + id).val('');
                        },
                        error: function (xhr, status, error) {
                            alert(error);
                        }
                    });
                });
            }
        }



        function createusers() {
            var nrofusers = $("#numberofusers")[0].value;
            $.ajax(
                   {
                       url: "/api/notificationapi/createusers/?nrofusers=" + nrofusers,
                       type: "POST",
                       inData: {},
                       contentType: 'application/json; charset=utf-8',
                       success: function (data) {
                       }
                   });
        }


        $('#to, #from, #content').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/api/notificationapi/findusers/?username=" + request.term,
                    type: "POST",
                    inData: {},
                    contentType: 'application/json; charset=utf-8',
                    data: {
                        q: request.term
                    },
                    success: function (data) {
                        response(data);
                    }
                });
            },
            minLength: 1,
            select: function (event, ui) {
                event.target = ui.item.label;
            },
            open: function () {
                $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
            },
            close: function () {
                $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
            }
        });

    </script>
</body>
</html>
